version: '3.9'

services:
  db:
    image: postgres:16
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: egor
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: my_database
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U egor -d my_database"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      - app_network

  redis:
    image: redis:7.4
    container_name: redisclient
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network
    command: ["redis-server"]  # Убрали параметр --requirepass
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]  # Убрали аутентификацию
      interval: 10s
      timeout: 5s
      retries: 5

  # app:
  #   build: ./app
  #   container_name: node_app
  #   restart: unless-stopped
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   environment:
  #     DATABASE_URL: postgres://egor:12345@db:5432/my_database
  #     REDIS_HOST: redis
  #     REDIS_PORT: 6379
  #     REDIS_PASSWORD: securepassword
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - app_network
  #   volumes:
  #     - ./app:/usr/src/app
  #   command: ["node", "app.ts"]
  #   env_file:
  #     ".env"
volumes:
  db_data: {}
  redis_data: {}

networks:
  app_network:
    driver: bridge